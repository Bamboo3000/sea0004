[recentJobs]
==
<?php

public function onStart()
{
    if(App::getLocale() == 'en') {
        $this['jobUrl'] = "/en/job/";
    } else {
        $this['jobUrl'] = "/nl/vacature/";
    }
}

?>
==
		<footer class="footer">
			<div class="container">
				<div class="footer__grid-container">
					<div class="footer__grid">
						<div class="footer__grid-content">
							<h5 class="footer__title">{{ 'Contact'|_ }}</h5>
							<div class="footer__content">
								<p>
									Search It Recruitment B.V.<br/>
									Laan van Kronenburg 14<br/>
									1183 AS Amstelveen<br/>
									Amsterdam Area, The Netherlands
								</p>
								<p>
									Phone: <a href="tel:+31207782393">+31 (0) 20 - 7782393</a><br/>
									Email: <a href="mailto:info@searchitrecruitment.com">info@searchitrecruitment.com</a>
								</p>
								<p>
									KVK: 62737244<br/>
									BTW: NL854937274B01<br/>
									BANK: NL54INGB0006845114
								</p>
							</div>
						</div>
					</div>
					<div class="footer__grid">
						<div class="footer__grid-content">
							<h5 class="footer__title">{{ 'Recent Jobs'|_ }}</h5>
							<div class="footer__content">
								<ul>
									{% for job in recent %}
										<li>
											<a href="{{ jobUrl }}{{ job.slug }}">{{ job.title }}</a>
										</li>
									{% endfor %}
								</ul>
							</div>
						</div>
					</div>
					<div class="footer__grid">
						<div class="footer__grid-content">
							<h5 class="footer__title">{{ 'Hot Skills'|_ }}</h5>
							<div class="footer__content">
								{% content 'hot-skills.htm' %}
							</div>
						</div>
					</div>
					<div class="footer__grid">
						<div class="footer__grid-content">
							<h5 class="footer__title">{{ 'Newsletter'|_ }}</h5>
							<div class="footer__content">
								<p>
									{{ 'Interested in instantly receiving the latest Search It Recruitment jobs within your are of expertise?'|_ }}
								</p>
								<a href="http://jobs.searchsoftware.nl/searchit/subscribe" class="btn btn-default" target="_blank">
									<span>{{ 'Subscribe'|_ }}</span>
								</a>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="footer__lower">
				<div class="container">
					<div class="footer__lower__grid-container">
						<div class="footer__lower__grid left">
							<p>
								Copyright Â© 2017 Search It Recruitment B.V.
							</p>
						</div>
						<div class="footer__lower__grid right">
							<p>
								<a href="#" target="_blank">Made by <!--<i class="fa fa-heart" aria-hidden="true"></i> by: --><span>Sative</span></a>
							</p>
						</div>
					</div>
				</div>
			</div>
		</footer>
		<div id="uploadCvModal" class="modal" aria-hidden="true">
			{{ form_open({ method: 'POST', files: 'true', request: 'onFormSubmit',  }) }}
				<i class="material-icons close" onclick="hideCVForm()">close</i>
					{% flash success %}
						{% if message == 'cv' %}
							<p
								data-control="flash-message"
								class="flash-message fade info"
								data-interval="10">
								{{ 'CV uploaded!'|_ }}
							</p>
						{% endif %}
					{% endflash %}
					<div class="title">
						<p><span>{{ 'Upload your CV to our database'|_ }}!</span></p>
						<span>
							{{ 'Fill the form using'|_ }}:
						</span>
						<button class="fb" type="button" onclick="myFacebookLogin()">Facebook</button>
        				<button class="li" type="button" onclick="liAuth()">Linkedin</button>
					</div>
					<div class="input-cont">
						{{ form_token() }}
						{{ form_sessionKey() }}
						<input type="hidden" name="job-id" class="job-id" value="188">
						<input type="hidden" name="applicant-gender">
						<input type="hidden" name="form_type" value="cv">
						<label for="applicant-name">{{ 'Name'|_ }} <span>*</span></label>
						<input type="text" name="applicant-name" value="" required="required" placeholder="John Doe">
						<label for="applicant-email">{{ 'Email'|_ }} <span>*</span></label>
						<input type="email" name="applicant-email" value="" required="required" placeholder="johndoe@example.com">
						<label for="applicant-phone">{{ 'Phone'|_ }}</label>
						<input type="tel" name="applicant-phone" value="" placeholder="+31 123 456 789">
						<label for="applicant-address">{{ 'Address'|_ }}</label>
						<textarea class="address" name="applicant-address" placeholder="Prinses Beatrixlaan 23&#x0a; 2595 AK  'S-Gravenhage&#x0a; Netherlands"></textarea>
						<label for="applicant-cv">{{ 'Upload your CV'|_ }} <span>*</span></label>
						<div class="cvupload">
							<p id="cv-cv"><i>{{ 'Accepted formats: .doc | .docx | .pdf'|_ }}</i></p>
							<input type="file" accept="application/pdf,application/msword,
							application/vnd.openxmlformats-officedocument.wordprocessingml.document" name="applicant-cv" value="" required="required" onchange="getFileName(this, 'cv-cv')">
						</div>
						<div class="hidden-desktop">
							<label for="applicant-photo">{{ 'Upload your photo'|_ }}</label>
							<div class="cvupload">
								<p id="cv-photo-mobile"><i>{{ 'Accepted formats: .jpg | .png | .gif'|_ }}</i></p>
								<input type="file" accept="image/*" name="applicant-photo" value="" onchange="getFileName(this, 'cv-photo-mobile')">
							</div>
						</div>
					</div>
					<div class="input-cont">
						<div>
							<label for="applicant-find">{{ 'How did you find us?'|_ }}</label>
							<select name="applicant-find">
								<option value="Website SIR" selected disabled>{{ 'Choose an option'|_ }}</option>
								<option value="Website SIR">Website (direct)</option>
								<option value="Bing">Bing</option>
								<option value="Clients">Clients</option>
								<option value="Facebook">Facebook</option>
								<option value="Freelance.nl">Freelance.nl</option>
								<option value="Github">Github</option>
								<option value="Glassdoor">Glassdoor</option>
								<option value="Google">Google</option>
								<option value="Indeed">Indeed</option>
								<option value="Instagram">Instagram</option>
								<option value="Jobbird">Jobbird</option>
								<option value="LinkedIn">LinkedIn</option>
								<option value="Monsterboard">Monsterboard</option>
								<option value="Network">Network</option>
								<option value="Stackoverflow">Stackoverflow</option>
								<option value="Twitter">Twitter</option>
							</select>
							<i class="material-icons">expand_more</i>
						</div>
						<label for="applicant-message">{{ 'Motivation and extra details'|_ }}</label>
						<textarea class="message" name="applicant-message" placeholder="Webtwo ipsum mobly doostang cotweet handango, mozy. Jajah shopify meebo spotify balihoo dopplr klout, vimeo dopplr tumblr chumby yoono. Mozy napster tivo kazaa, kaboodle heekya. Etsy zillow movity jajah imvu, zanga dogster. Rovio bitly insala blyve, wikia."></textarea>
						<div class="hidden-mobile">
							<label for="applicant-photo">{{ 'Upload your photo'|_ }}</label>
							<div class="cvupload">
								<p id="cv-photo-desktop"><i>{{ 'Accepted formats: .jpg | .png | .gif'|_ }}</i></p>
								<input type="file" accept="image/*" name="applicant-photo" value="" onchange="getFileName(this, 'cv-photo-desktop')">
							</div>
						</div>
					</div>
					<input type="submit" value="Upload your CV">
			{{ form_close() }}
		</div>
        <!-- Scripts -->
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js" defer></script>
        <script src="{{ [
            'assets/js/app.js',
            '@framework',
            '@framework.extras'
        ]|theme }}" defer></script>
		<script type="text/javascript" src="//platform.linkedin.com/in.js" defer>
			$(window).on('load', function() {
				api_key: 77dug7ogaz4ouh
				onLoad: OnLinkedInFrameworkLoad
				authorize: false
			});
		</script>
		<script type="text/javascript" defer>
			var $formCont;

			$(document).ready(function() {
				if() {
					$formCont = $('#uploadCvModal, #jobFormModal');
				} else {
					$formCont = $('#jobFormModal');
				}
			});

			window.fbAsyncInit = function() {
				FB.init({
					appId      : '382574281913074',
					xfbml      : true,
					version    : 'v2.5'
				});
			};

			(function(d, s, id){
				var js, fjs = d.getElementsByTagName(s)[0];
				if (d.getElementById(id)) {return;}
				js = d.createElement(s); js.id = id;
				js.src = "//connect.facebook.net/en_US/sdk.js";
				fjs.parentNode.insertBefore(js, fjs);
			}(document, 'script', 'facebook-jssdk'));

			function myFacebookLogin() {
				FB.init({
					appId      : '382574281913074',
					xfbml      : true,
					version    : 'v2.5'
				});
				FB.login(function(response){
					if (response.status === 'connected') {
						console.log('Logged in.');
						FB.api('/me', {fields: 'name, email, location, gender'}, function(response1){
							$formCont.find('input[name="applicant-name"]').val(response1['name']);
							$formCont.find('input[name="applicant-email"]').val(response1['email']);
							$formCont.find('textarea[name="applicant-address"]').val(response1['location']);
							$formCont.find('input[name="applicant-gender"]').val(response1['gender']);
						});
						FB.api('/me/picture',{"redirect": false, "height": 200, "width": 200, "type": "normal"}, function(response2){
							$formCont.find('input[name="applicant-photo"]').val(response2['data']['url']);
						});
					} else {
						FB.login();
					}
				}, {scope: 'publish_actions'} );
			}

			function liAuth(){
				IN.User.authorize(function(){
					onLinkedInLoad();
				});
			}

			function OnLinkedInFrameworkLoad() {
				IN.Event.on(IN, "auth", onLinkedInLoad);
			}
			// Setup an event listener to make an API call once auth is complete
			function onLinkedInLoad() {
				IN.API.Profile("me").result(getProfileData);
			}
			// Handle the successful return from the API call
			function onSuccess(data) {
				console.log(data);
				$formCont.find('input[name="applicant-name"]').val(data['firstName']+' '+data['lastName']);
				$formCont.find('input[name="applicant-email"]').val(data['emailAddress']);
				$formCont.find('textarea[name="applicant-address"]').val(data['location']['name']);
				$formCont.find('input[name="applicant-photo"]').val(data['pictureUrl']);
			}
			// Handle an error response from the API call
			function onError(error) {
				console.log(error);
			}
			// Use the API call wrapper to request the member's basic profile data
			function getProfileData() {
				IN.API.Raw("/people/~:(first-name,last-name,picture-url,email-address,location)").result(onSuccess);
			}
		</script>
		<noscript id="deferred-styles">
			<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:400,500,700,900">
			<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
		</noscript>
	</div> <!-- /#wrapper -->
</body>
</html>